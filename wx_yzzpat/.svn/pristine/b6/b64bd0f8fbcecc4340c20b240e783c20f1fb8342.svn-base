package com.danrong.wx.yzzpat.controller;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.danrong.medex.configure.MedexConfigure;
import com.danrong.medex.configure.Status;
import com.danrong.medex.configure.TableFieldName;
import com.danrong.medex.module.v2.kfhospital.V2KfBedroomModule;
import com.danrong.medex.module.v2.kfhospital.V2KfBedroomModuleImpl;
import com.danrong.medex.module.v2.kfhospital.V2KfHospitalModule;
import com.danrong.medex.module.v2.kfhospital.V2KfHospitalModuleImpl;
import com.danrong.medex.util.Help;
import com.danrong.medex.util.v2.BedRoomSearchQuery;
import com.danrong.medex.util.v2.HospitalSearchQuery;

@Controller
public class TransferController {

  @Value("#{properties['wx_yzzpat.web.host']}")
  public String mainUrl;

  private final V2KfHospitalModule v2kfHospitalModule = new V2KfHospitalModuleImpl();
  private final V2KfBedroomModule v2kfBedrooomModule = new V2KfBedroomModuleImpl();

  @RequestMapping(value = "turn_hospital")
  public ModelAndView turn_hospital(HttpServletRequest request, HttpServletResponse response) {
    ModelAndView view = new ModelAndView();
    view.setViewName("turn_hospital");
    view.addObject("mainUrl", mainUrl.trim());

    // 获取医院列表
    List<Map<String, Object>> data = get_list_data(new HospitalSearchQuery());

    if (data.isEmpty()) view.addObject("nolist", true);

    view.addObject("data", data);
    return view;
  }

  @RequestMapping(value = "ward_list")
  public ModelAndView ward_list(HttpServletRequest request, HttpServletResponse response, String hosId) {
    ModelAndView view = new ModelAndView();
    view.setViewName("ward_list");
    view.addObject("mainUrl", mainUrl.trim());

    // 医院详情
    Map<String, Object> detail = get_hospital_detail(hosId);
    // 病房列表
    BedRoomSearchQuery bq = new BedRoomSearchQuery();
    bq.setHospital_id(hosId);

    List<Map<String, Object>> bed_room_list = get_bedroom_list(bq);

    if (bed_room_list.isEmpty()) view.addObject("nolist", true);

    view.addObject("bed_room_list", bed_room_list);
    view.addObject("detail", detail);

    return view;
  }

  @RequestMapping(value = "get_more_hos_records.do", produces = "application/string; charset=utf-8")
  @ResponseBody
  public String get_more_hos_records(HttpServletRequest request, HttpServletResponse response, int cp) {
    Map<String, Object> result = new HashMap<>();
    if (cp < 1) result.put(TableFieldName.status, Status.STATUS_ERROR);
    else {
      HospitalSearchQuery param = new HospitalSearchQuery();
      param.setCp(cp);

      List<Map<String, Object>> data = get_list_data(param);
      if (data != null) {
        result.put(TableFieldName.status, Status.STATUS_OK);

        result.put("data", data);
      } else result.put(TableFieldName.status, Status.STATUS_ERROR);
    }
    return Help.bean2Json(result);
  }

  @RequestMapping(value = "get_city.do", produces = "application/string; charset=utf-8")
  @ResponseBody
  public String get_city(HttpServletRequest request, HttpServletResponse response) {
    Map<String, Object> result = new HashMap<>();

    List<String> data = v2kfHospitalModule.getKfCityList();
    result.put("data", data);

    return Help.bean2Json(result);
  }

  @RequestMapping(value = "get_area.do", produces = "application/string; charset=utf-8")
  @ResponseBody
  public String get_area(HttpServletRequest request, HttpServletResponse response, String city) {
    Map<String, Object> result = new HashMap<>();

    List<String> data = v2kfHospitalModule.getKfDistrictListByCity(city);
    result.put("data", data);

    return Help.bean2Json(result);
  }

  private List<Map<String, Object>> get_list_data(HospitalSearchQuery param) {
    List<Map<String, Object>> datalist = v2kfHospitalModule.getKfHospitals(param);

    List<Map<String, Object>> data = new LinkedList<>();
    if (datalist != null) {
      for (Map<String, Object> map : datalist) {
        Map<String, Object> subdata = new HashMap<>();
        subdata.put("hospital_id", map.get("record_id"));
        subdata.put("hospital_name", map.get("name"));
        subdata.put("hospital_image", map.get("image"));
        subdata.put("auth", map.get("auth"));
        subdata.put("district", map.get("district"));
        subdata.put("pss", map.get("pss"));
        subdata.put("departments", map.get("departments"));
        subdata.put("distance", map.get("distance"));
        data.add(subdata);
      }
    }
    return data;
  }

  @SuppressWarnings("unchecked")
  private Map<String, Object> get_hospital_detail(String hospital_id) {
    Map<String, Object> datamap = v2kfHospitalModule.findByHospitalId(hospital_id);
    Map<String, Object> data = new HashMap<>();
    if (datamap != null) {
      data.put("hospital_id", datamap.get("record_id"));
      data.put("hospital_name", datamap.get("name"));
      data.put("hospital_pictures", datamap.get("pictures"));
      data.put("bednumber", datamap.get("bednumber"));
      data.put("address", datamap.get("address"));
      data.put("location", datamap.get("location"));
      data.put("intro", datamap.get("intro"));
      boolean auth = (boolean) datamap.get("auth");
      data.put("auth", auth);
      data.put("pss", datamap.get("pss"));
      // 医院认证详情
      if (auth) data.put("v_intro", "浙江省医学会授牌医疗机构");
      List<String> tags = new LinkedList<>();
      List<String> departments = (List<String>) datamap.get("departments");
      boolean pss = (boolean) datamap.get("pss");
      if (pss) tags.add("转运车接送");
      tags.addAll(departments);
      data.put("tags", tags);
    }
    return data;
  }

  private List<Map<String, Object>> get_bedroom_list(BedRoomSearchQuery param) {
    List<Map<String, Object>> datalist = v2kfBedrooomModule.getKfBedrooms(param);
    List<Map<String, Object>> data = new LinkedList<>();
    if (datalist != null) {
      for (Map<String, Object> map : datalist) {
        Map<String, Object> subdata = new HashMap<>();
        subdata.put("bedroom_id", map.get("record_id"));
        subdata.put("bedroom_name", map.get("name"));
        subdata.put("bedroom_image", map.get("image"));
        subdata.put("space", map.get("space"));
        subdata.put("tags", map.get("tags"));
        subdata.put("floor", map.get("floor"));
        subdata.put("bedroom_pictures", map.get("pictures"));
        subdata.put("bednumber", map.get("bednumber"));
        subdata.put("price", MedexConfigure.kf_bedroom_price_type + map.get("price") + " "
            + MedexConfigure.kf_bedroom_price_unit);

        data.add(subdata);
      }
    }
    return data;
  }
}
